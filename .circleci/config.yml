version: 2.1

executors:
  default_executor:
    docker:
      - image: crystallang/crystal:0.35.1
        environment:
          DATABASE_URL: postgres://runner:@localhost:5432/skirmish_test
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: runner
          POSTGRES_DB: skirmish_test
      - image: redis

commands:
  checkout_and_install_dependencies:
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "shard.lock" }}
      - run:
          name: Init and update Git submodules
          command: |
              git submodule init
              git submodule update
      - run:
          name: Install dependencies
          command: shards install
      - run:
          name: Install PostgreSQL Client
          command: |
              apt-get update
              apt-get install -y wget
              echo "deb http://apt.postgresql.org/pub/repos/apt/ jessie-pgdg main" | tee /etc/apt/sources.list.d/pgdg.list
              wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
              apt-get install -y postgresql-client
      - save_cache:
          key: dependency-cache-{{ checksum "shard.lock" }}
          paths:
            - ./lib

jobs:
  build:
    working_directory: ~/skirmish
    executor: default_executor
    steps:
      - checkout_and_install_dependencies
      - run:
          name: Run Crystal specs
          command: crystal spec
      - run:
          name: Install Ameba
          command: shards build ameba
      - run:
          name: Run Ameba linter
          command: bin/ameba
      - run:
          name: Run Seeds
          command: crystal db/seeds.cr

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
